{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4305038\\\\cotacao-web\\\\frontend\\\\src\\\\pages\\\\Cotacao.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../assets/css/Cotacao.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cotacao = () => {\n  _s();\n  const [form, setForm] = useState({\n    cepOrigem: \"74672856\",\n    cepDestino: \"\",\n    valorNotaFiscal: \"R$ 0,00\",\n    entregaDomicilio: false,\n    retiraTerminal: false,\n    pagamentoOrigem: false,\n    pagamentoDestino: false,\n    adValorem: false,\n    semSeguro: false,\n    volumes: [{\n      altura: 10,\n      largura: 10,\n      comprimento: 10,\n      peso: \"0,0\"\n    }]\n  });\n\n  // Fun√ß√£o para formatar peso no formato \"0,5\"\n  const formatPeso = value => {\n    let pesoFormatado = value.replace(/[^0-9,]/g, \"\").replace(/^,/, \"0,\");\n\n    // Impede m√∫ltiplas v√≠rgulas\n    if ((pesoFormatado.match(/,/g) || []).length > 1) {\n      pesoFormatado = pesoFormatado.replace(/,(?=.*,)/g, \"\");\n    }\n    return pesoFormatado;\n  };\n\n  // Manipular mudan√ßas nos volumes\n  const handleVolumeChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (value === \"\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = \"\";\n      setForm({\n        ...form,\n        volumes: newVolumes\n      });\n      return;\n    }\n    if (name === \"peso\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = formatPeso(value);\n      setForm({\n        ...form,\n        volumes: newVolumes\n      });\n      return;\n    }\n    const parsedValue = parseInt(value.replace(/\\D/g, \"\"), 10);\n    if (!isNaN(parsedValue)) {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = parsedValue;\n      setForm({\n        ...form,\n        volumes: newVolumes\n      });\n    }\n  };\n\n  // üîπ Formata o peso corretamente ao sair do campo\n  const formatPesoFinal = index => {\n    let pesoAtual = form.volumes[index].peso;\n    if (!pesoAtual || pesoAtual === \",\") {\n      return;\n    }\n\n    // Se n√£o houver v√≠rgula, adiciona \",0\"\n    if (!pesoAtual.includes(\",\")) {\n      pesoAtual = `${pesoAtual},0`;\n    }\n\n    // Divide entre kg e gramas\n    let [kg, g] = pesoAtual.split(\",\");\n\n    // Remove zeros √† esquerda do kg (mas mant√©m pelo menos \"0\")\n    kg = kg.replace(/^0+/, \"\") || \"0\";\n\n    // Garante que os gramas tenham 1 d√≠gito\n    g = (g || \"\").slice(0, 1).padEnd(1, \"0\");\n\n    // Atualiza o valor formatado\n    const newVolumes = [...form.volumes];\n    newVolumes[index].peso = `${kg},${g}`;\n    setForm({\n      ...form,\n      volumes: newVolumes\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cotacao-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculadora de Frete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volumes-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dados do Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), form.volumes.map((volume, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Altura (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"altura\",\n          value: volume.altura,\n          onChange: e => handleVolumeChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Largura (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"largura\",\n          value: volume.largura,\n          onChange: e => handleVolumeChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Comprimento (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"comprimento\",\n          value: volume.comprimento,\n          onChange: e => handleVolumeChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Peso (Kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"peso\",\n          value: volume.peso,\n          onChange: e => handleVolumeChange(index, e),\n          onBlur: () => formatPesoFinal(index) // Formata ao sair do campo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Cotacao, \"LTM9QohosMmwReuLRWdZH80pVjg=\");\n_c = Cotacao;\nexport default Cotacao;\nvar _c;\n$RefreshReg$(_c, \"Cotacao\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cotacao","_s","form","setForm","cepOrigem","cepDestino","valorNotaFiscal","entregaDomicilio","retiraTerminal","pagamentoOrigem","pagamentoDestino","adValorem","semSeguro","volumes","altura","largura","comprimento","peso","formatPeso","value","pesoFormatado","replace","match","length","handleVolumeChange","index","e","name","target","newVolumes","parsedValue","parseInt","isNaN","formatPesoFinal","pesoAtual","includes","kg","g","split","slice","padEnd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","volume","type","onChange","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/4305038/cotacao-web/frontend/src/pages/Cotacao.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../assets/css/Cotacao.css\";\n\nconst Cotacao = () => {\n  const [form, setForm] = useState({\n    cepOrigem: \"74672856\",\n    cepDestino: \"\",\n    valorNotaFiscal: \"R$ 0,00\",\n    entregaDomicilio: false,\n    retiraTerminal: false,\n    pagamentoOrigem: false,\n    pagamentoDestino: false,\n    adValorem: false,\n    semSeguro: false,\n    volumes: [{ altura: 10, largura: 10, comprimento: 10, peso: \"0,0\" }],\n  });\n\n  // Fun√ß√£o para formatar peso no formato \"0,5\"\n  const formatPeso = (value) => {\n    let pesoFormatado = value.replace(/[^0-9,]/g, \"\").replace(/^,/, \"0,\");\n\n    // Impede m√∫ltiplas v√≠rgulas\n    if ((pesoFormatado.match(/,/g) || []).length > 1) {\n      pesoFormatado = pesoFormatado.replace(/,(?=.*,)/g, \"\");\n    }\n\n    return pesoFormatado;\n  };\n\n  // Manipular mudan√ßas nos volumes\n  const handleVolumeChange = (index, e) => {\n    const { name, value } = e.target;\n\n    if (value === \"\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = \"\";\n      setForm({ ...form, volumes: newVolumes });\n      return;\n    }\n\n    if (name === \"peso\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = formatPeso(value);\n      setForm({ ...form, volumes: newVolumes });\n      return;\n    }\n\n    const parsedValue = parseInt(value.replace(/\\D/g, \"\"), 10);\n    if (!isNaN(parsedValue)) {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = parsedValue;\n      setForm({ ...form, volumes: newVolumes });\n    }\n  };\n\n  // üîπ Formata o peso corretamente ao sair do campo\n  const formatPesoFinal = (index) => {\n    let pesoAtual = form.volumes[index].peso;\n\n    if (!pesoAtual || pesoAtual === \",\") {\n      return;\n    }\n\n    // Se n√£o houver v√≠rgula, adiciona \",0\"\n    if (!pesoAtual.includes(\",\")) {\n      pesoAtual = `${pesoAtual},0`;\n    }\n\n    // Divide entre kg e gramas\n    let [kg, g] = pesoAtual.split(\",\");\n\n    // Remove zeros √† esquerda do kg (mas mant√©m pelo menos \"0\")\n    kg = kg.replace(/^0+/, \"\") || \"0\";\n\n    // Garante que os gramas tenham 1 d√≠gito\n    g = (g || \"\").slice(0, 1).padEnd(1, \"0\");\n\n    // Atualiza o valor formatado\n    const newVolumes = [...form.volumes];\n    newVolumes[index].peso = `${kg},${g}`;\n    setForm({ ...form, volumes: newVolumes });\n  };\n\n  return (\n    <div className=\"cotacao-container\">\n      <h1>Calculadora de Frete</h1>\n\n      <div className=\"volumes-container\">\n        <h3>Dados do Volume</h3>\n        {form.volumes.map((volume, index) => (\n          <div key={index} className=\"volume-box\">\n            <label>Altura (cm)</label>\n            <input\n              type=\"number\"\n              name=\"altura\"\n              value={volume.altura}\n              onChange={(e) => handleVolumeChange(index, e)}\n            />\n\n            <label>Largura (cm)</label>\n            <input\n              type=\"number\"\n              name=\"largura\"\n              value={volume.largura}\n              onChange={(e) => handleVolumeChange(index, e)}\n            />\n\n            <label>Comprimento (cm)</label>\n            <input\n              type=\"number\"\n              name=\"comprimento\"\n              value={volume.comprimento}\n              onChange={(e) => handleVolumeChange(index, e)}\n            />\n\n            <label>Peso (Kg)</label>\n            <input\n              type=\"text\"\n              name=\"peso\"\n              value={volume.peso}\n              onChange={(e) => handleVolumeChange(index, e)}\n              onBlur={() => formatPesoFinal(index)} // Formata ao sair do campo\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Cotacao;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC/BO,SAAS,EAAE,UAAU;IACrBC,UAAU,EAAE,EAAE;IACdC,eAAe,EAAE,SAAS;IAC1BC,gBAAgB,EAAE,KAAK;IACvBC,cAAc,EAAE,KAAK;IACrBC,eAAe,EAAE,KAAK;IACtBC,gBAAgB,EAAE,KAAK;IACvBC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,CAAC;MAAEC,MAAM,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAM,CAAC;EACrE,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5B,IAAIC,aAAa,GAAGD,KAAK,CAACE,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;;IAErE;IACA,IAAI,CAACD,aAAa,CAACE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAEC,MAAM,GAAG,CAAC,EAAE;MAChDH,aAAa,GAAGA,aAAa,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;IACxD;IAEA,OAAOD,aAAa;EACtB,CAAC;;EAED;EACA,MAAMI,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,CAAC,KAAK;IACvC,MAAM;MAAEC,IAAI;MAAER;IAAM,CAAC,GAAGO,CAAC,CAACE,MAAM;IAEhC,IAAIT,KAAK,KAAK,EAAE,EAAE;MAChB,MAAMU,UAAU,GAAG,CAAC,GAAG3B,IAAI,CAACW,OAAO,CAAC;MACpCgB,UAAU,CAACJ,KAAK,CAAC,CAACE,IAAI,CAAC,GAAG,EAAE;MAC5BxB,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEW,OAAO,EAAEgB;MAAW,CAAC,CAAC;MACzC;IACF;IAEA,IAAIF,IAAI,KAAK,MAAM,EAAE;MACnB,MAAME,UAAU,GAAG,CAAC,GAAG3B,IAAI,CAACW,OAAO,CAAC;MACpCgB,UAAU,CAACJ,KAAK,CAAC,CAACE,IAAI,CAAC,GAAGT,UAAU,CAACC,KAAK,CAAC;MAC3ChB,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEW,OAAO,EAAEgB;MAAW,CAAC,CAAC;MACzC;IACF;IAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACZ,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IAC1D,IAAI,CAACW,KAAK,CAACF,WAAW,CAAC,EAAE;MACvB,MAAMD,UAAU,GAAG,CAAC,GAAG3B,IAAI,CAACW,OAAO,CAAC;MACpCgB,UAAU,CAACJ,KAAK,CAAC,CAACE,IAAI,CAAC,GAAGG,WAAW;MACrC3B,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEW,OAAO,EAAEgB;MAAW,CAAC,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMI,eAAe,GAAIR,KAAK,IAAK;IACjC,IAAIS,SAAS,GAAGhC,IAAI,CAACW,OAAO,CAACY,KAAK,CAAC,CAACR,IAAI;IAExC,IAAI,CAACiB,SAAS,IAAIA,SAAS,KAAK,GAAG,EAAE;MACnC;IACF;;IAEA;IACA,IAAI,CAACA,SAAS,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC5BD,SAAS,GAAG,GAAGA,SAAS,IAAI;IAC9B;;IAEA;IACA,IAAI,CAACE,EAAE,EAAEC,CAAC,CAAC,GAAGH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC;;IAElC;IACAF,EAAE,GAAGA,EAAE,CAACf,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG;;IAEjC;IACAgB,CAAC,GAAG,CAACA,CAAC,IAAI,EAAE,EAAEE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;;IAExC;IACA,MAAMX,UAAU,GAAG,CAAC,GAAG3B,IAAI,CAACW,OAAO,CAAC;IACpCgB,UAAU,CAACJ,KAAK,CAAC,CAACR,IAAI,GAAG,GAAGmB,EAAE,IAAIC,CAAC,EAAE;IACrClC,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEW,OAAO,EAAEgB;IAAW,CAAC,CAAC;EAC3C,CAAC;EAED,oBACE9B,OAAA;IAAK0C,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC3C,OAAA;MAAA2C,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7B/C,OAAA;MAAK0C,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC3C,OAAA;QAAA2C,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvB5C,IAAI,CAACW,OAAO,CAACkC,GAAG,CAAC,CAACC,MAAM,EAAEvB,KAAK,kBAC9B1B,OAAA;QAAiB0C,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACrC3C,OAAA;UAAA2C,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1B/C,OAAA;UACEkD,IAAI,EAAC,QAAQ;UACbtB,IAAI,EAAC,QAAQ;UACbR,KAAK,EAAE6B,MAAM,CAAClC,MAAO;UACrBoC,QAAQ,EAAGxB,CAAC,IAAKF,kBAAkB,CAACC,KAAK,EAAEC,CAAC;QAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eAEF/C,OAAA;UAAA2C,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3B/C,OAAA;UACEkD,IAAI,EAAC,QAAQ;UACbtB,IAAI,EAAC,SAAS;UACdR,KAAK,EAAE6B,MAAM,CAACjC,OAAQ;UACtBmC,QAAQ,EAAGxB,CAAC,IAAKF,kBAAkB,CAACC,KAAK,EAAEC,CAAC;QAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eAEF/C,OAAA;UAAA2C,QAAA,EAAO;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/B/C,OAAA;UACEkD,IAAI,EAAC,QAAQ;UACbtB,IAAI,EAAC,aAAa;UAClBR,KAAK,EAAE6B,MAAM,CAAChC,WAAY;UAC1BkC,QAAQ,EAAGxB,CAAC,IAAKF,kBAAkB,CAACC,KAAK,EAAEC,CAAC;QAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eAEF/C,OAAA;UAAA2C,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxB/C,OAAA;UACEkD,IAAI,EAAC,MAAM;UACXtB,IAAI,EAAC,MAAM;UACXR,KAAK,EAAE6B,MAAM,CAAC/B,IAAK;UACnBiC,QAAQ,EAAGxB,CAAC,IAAKF,kBAAkB,CAACC,KAAK,EAAEC,CAAC,CAAE;UAC9CyB,MAAM,EAAEA,CAAA,KAAMlB,eAAe,CAACR,KAAK,CAAE,CAAC;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA,GAhCMrB,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiCV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA7HID,OAAO;AAAAoD,EAAA,GAAPpD,OAAO;AA+Hb,eAAeA,OAAO;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}