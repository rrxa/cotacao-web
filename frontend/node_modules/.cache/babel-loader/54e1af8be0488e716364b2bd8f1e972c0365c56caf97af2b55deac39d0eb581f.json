{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4305038\\\\cotacao-web\\\\frontend\\\\src\\\\pages\\\\Cotacao.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../assets/css/Cotacao.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cotacao = () => {\n  _s();\n  const [form, setForm] = useState({\n    cepOrigem: \"74672856\",\n    cepDestino: \"\",\n    valorNotaFiscal: \"R$ 0,00\",\n    entregaDomicilio: false,\n    retiraTerminal: false,\n    pagamentoOrigem: false,\n    pagamentoDestino: false,\n    adValorem: false,\n    semSeguro: false,\n    volumes: [{\n      altura: 10,\n      largura: 10,\n      comprimento: 10,\n      peso: \"0,0\"\n    }]\n  });\n\n  // Manipular mudanÃ§a de estado nos campos do formulÃ¡rio\n  const formatCEP = cep => {\n    let formattedCEP = cep.replace(/\\D/g, \"\").slice(0, 8);\n    return formattedCEP.length > 5 ? formattedCEP.replace(/^(\\d{5})(\\d{3})$/, \"$1-$2\") : formattedCEP;\n  };\n  const formatCurrency = value => {\n    let numericValue = value.replace(/\\D/g, \"\");\n    let floatValue = numericValue ? parseFloat(numericValue) / 100 : 0;\n    return numericValue ? floatValue.toLocaleString(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\",\n      minimumFractionDigits: 2\n    }) : \"\";\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let newValue = value;\n    if (name === \"cepDestino\") newValue = formatCEP(value);\n    if (name === \"valorNotaFiscal\") newValue = formatCurrency(value);\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: newValue\n    }));\n  };\n\n  // FunÃ§Ã£o para formatar peso no formato \"0,5\"\n  const formatPeso = value => {\n    let pesoFormatado = value.replace(/[^0-9,]/g, \"\").replace(/^,/, \"0,\");\n\n    // Impede mÃºltiplas vÃ­rgulas\n    if ((pesoFormatado.match(/,/g) || []).length > 1) {\n      pesoFormatado = pesoFormatado.replace(/,(?=.*,)/g, \"\");\n    }\n    return pesoFormatado;\n  };\n\n  // Alternar entre Entrega a DomicÃ­lio e Retira no Terminal\n  const handleEntregaClick = tipo => {\n    if (tipo === \"domicilio\" && form.pagamentoDestino) {\n      alert(\"NÃ£o Ã© possÃ­vel selecionar Entrega a DomicÃ­lio quando o pagamento Ã© no DestinatÃ¡rio.\");\n      return;\n    }\n    setForm(prevForm => ({\n      ...prevForm,\n      entregaDomicilio: tipo === \"domicilio\" ? !prevForm.entregaDomicilio : false,\n      retiraTerminal: tipo === \"terminal\" ? !prevForm.retiraTerminal : false\n    }));\n  };\n\n  // Regras de validaÃ§Ã£o para Pagamento\n  const validarPagamento = tipo => {\n    if (tipo === \"origem\") {\n      setForm(prevForm => ({\n        ...prevForm,\n        pagamentoOrigem: true,\n        pagamentoDestino: false\n      }));\n    } else {\n      if (form.entregaDomicilio) {\n        alert(\"NÃ£o Ã© possÃ­vel selecionar Pagamento no DestinatÃ¡rio quando Entrega a DomicÃ­lio estÃ¡ marcada.\");\n        return;\n      }\n      setForm(prevForm => ({\n        ...prevForm,\n        pagamentoOrigem: false,\n        pagamentoDestino: true\n      }));\n    }\n  };\n\n  // Alternar entre Ad-Valorem e Sem Seguro\n  const handleSeguroClick = tipo => {\n    setForm(prevForm => ({\n      ...prevForm,\n      adValorem: tipo === \"adValorem\" ? !prevForm.adValorem : false,\n      semSeguro: tipo === \"semSeguro\" ? !prevForm.semSeguro : false\n    }));\n  };\n\n  // Manipular mudanÃ§a nos volumes\n  const handleVolumeChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (value === \"\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = \"\";\n      setForm({\n        ...form,\n        volumes: newVolumes\n      });\n      return;\n    }\n    if (name === \"peso\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = value;\n      setForm({\n        ...form,\n        volumes: newVolumes\n      });\n      return;\n    }\n    const parsedValue = parseInt(value.replace(/\\D/g, \"\"), 10);\n    if (!isNaN(parsedValue)) {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = parsedValue;\n      setForm({\n        ...form,\n        volumes: newVolumes\n      });\n    }\n  };\n\n  // ðŸ”¹ Formata o peso corretamente ao sair do campo\n  const formatPesoFinal = index => {\n    let pesoAtual = form.volumes[index].peso;\n    if (!pesoAtual || pesoAtual === \",\") {\n      pesoAtual = \"0,0\";\n    }\n\n    // Se nÃ£o houver vÃ­rgula, adiciona \",0\"\n    if (!pesoAtual.includes(\",\")) {\n      pesoAtual = `${pesoAtual},0`;\n    }\n\n    // Divide entre kg e gramas\n    let [kg, g] = pesoAtual.split(\",\");\n\n    // Remove zeros Ã  esquerda do kg (mas mantÃ©m pelo menos \"0\")\n    kg = kg.replace(/^0+/, \"\") || \"0\";\n\n    // Garante que os gramas tenham 1 dÃ­gito\n    g = (g || \"\").slice(0, 1).padEnd(1, \"0\");\n\n    // Atualiza o valor formatado\n    const newVolumes = [...form.volumes];\n    newVolumes[index].peso = `${kg},${g}`;\n    setForm({\n      ...form,\n      volumes: newVolumes\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cotacao-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculadora de Frete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volumes-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dados do Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), form.volumes.map((volume, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Altura (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"altura\",\n          value: volume.altura,\n          onChange: e => handleVolumeChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Largura (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"largura\",\n          value: volume.largura,\n          onChange: e => handleVolumeChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Comprimento (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"comprimento\",\n          value: volume.comprimento,\n          onChange: e => handleVolumeChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Peso (Kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"peso\",\n          value: volume.peso,\n          onChange: e => handleVolumeChange(index, e),\n          onBlur: () => formatPesoFinal(index) // Formata ao sair do campo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Cotacao, \"LTM9QohosMmwReuLRWdZH80pVjg=\");\n_c = Cotacao;\nexport default Cotacao;\nvar _c;\n$RefreshReg$(_c, \"Cotacao\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cotacao","_s","form","setForm","cepOrigem","cepDestino","valorNotaFiscal","entregaDomicilio","retiraTerminal","pagamentoOrigem","pagamentoDestino","adValorem","semSeguro","volumes","altura","largura","comprimento","peso","formatCEP","cep","formattedCEP","replace","slice","length","formatCurrency","value","numericValue","floatValue","parseFloat","toLocaleString","style","currency","minimumFractionDigits","handleChange","e","name","target","newValue","prevForm","formatPeso","pesoFormatado","match","handleEntregaClick","tipo","alert","validarPagamento","handleSeguroClick","handleVolumeChange","index","newVolumes","parsedValue","parseInt","isNaN","formatPesoFinal","pesoAtual","includes","kg","g","split","padEnd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","volume","type","onChange","onBlur","_c","$RefreshReg$"],"sources":["C:/Users/4305038/cotacao-web/frontend/src/pages/Cotacao.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../assets/css/Cotacao.css\";\n\nconst Cotacao = () => {\n  const [form, setForm] = useState({\n    cepOrigem: \"74672856\",\n    cepDestino: \"\",\n    valorNotaFiscal: \"R$ 0,00\",\n    entregaDomicilio: false,\n    retiraTerminal: false,\n    pagamentoOrigem: false,\n    pagamentoDestino: false,\n    adValorem: false,\n    semSeguro: false,\n    volumes: [{ altura: 10, largura: 10, comprimento: 10, peso: \"0,0\" }],\n  });\n\n  // Manipular mudanÃ§a de estado nos campos do formulÃ¡rio\n  const formatCEP = (cep) => {\n    let formattedCEP = cep.replace(/\\D/g, \"\").slice(0, 8);\n    return formattedCEP.length > 5\n      ? formattedCEP.replace(/^(\\d{5})(\\d{3})$/, \"$1-$2\")\n      : formattedCEP;\n  };\n\n  const formatCurrency = (value) => {\n    let numericValue = value.replace(/\\D/g, \"\");\n    let floatValue = numericValue ? parseFloat(numericValue) / 100 : 0;\n    return numericValue\n      ? floatValue.toLocaleString(\"pt-BR\", {\n          style: \"currency\",\n          currency: \"BRL\",\n          minimumFractionDigits: 2,\n        })\n      : \"\";\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    let newValue = value;\n    if (name === \"cepDestino\") newValue = formatCEP(value);\n    if (name === \"valorNotaFiscal\") newValue = formatCurrency(value);\n\n    setForm((prevForm) => ({\n      ...prevForm,\n      [name]: newValue,\n    }));\n  };\n\n  // FunÃ§Ã£o para formatar peso no formato \"0,5\"\n  const formatPeso = (value) => {\n    let pesoFormatado = value.replace(/[^0-9,]/g, \"\").replace(/^,/, \"0,\");\n\n    // Impede mÃºltiplas vÃ­rgulas\n    if ((pesoFormatado.match(/,/g) || []).length > 1) {\n      pesoFormatado = pesoFormatado.replace(/,(?=.*,)/g, \"\");\n    }\n\n    return pesoFormatado;\n  };\n\n  // Alternar entre Entrega a DomicÃ­lio e Retira no Terminal\n  const handleEntregaClick = (tipo) => {\n    if (tipo === \"domicilio\" && form.pagamentoDestino) {\n      alert(\n        \"NÃ£o Ã© possÃ­vel selecionar Entrega a DomicÃ­lio quando o pagamento Ã© no DestinatÃ¡rio.\"\n      );\n      return;\n    }\n\n    setForm((prevForm) => ({\n      ...prevForm,\n      entregaDomicilio:\n        tipo === \"domicilio\" ? !prevForm.entregaDomicilio : false,\n      retiraTerminal: tipo === \"terminal\" ? !prevForm.retiraTerminal : false,\n    }));\n  };\n\n  // Regras de validaÃ§Ã£o para Pagamento\n  const validarPagamento = (tipo) => {\n    if (tipo === \"origem\") {\n      setForm((prevForm) => ({\n        ...prevForm,\n        pagamentoOrigem: true,\n        pagamentoDestino: false,\n      }));\n    } else {\n      if (form.entregaDomicilio) {\n        alert(\n          \"NÃ£o Ã© possÃ­vel selecionar Pagamento no DestinatÃ¡rio quando Entrega a DomicÃ­lio estÃ¡ marcada.\"\n        );\n        return;\n      }\n      setForm((prevForm) => ({\n        ...prevForm,\n        pagamentoOrigem: false,\n        pagamentoDestino: true,\n      }));\n    }\n  };\n\n  // Alternar entre Ad-Valorem e Sem Seguro\n  const handleSeguroClick = (tipo) => {\n    setForm((prevForm) => ({\n      ...prevForm,\n      adValorem: tipo === \"adValorem\" ? !prevForm.adValorem : false,\n      semSeguro: tipo === \"semSeguro\" ? !prevForm.semSeguro : false,\n    }));\n  };\n\n  // Manipular mudanÃ§a nos volumes\n  const handleVolumeChange = (index, e) => {\n    const { name, value } = e.target;\n\n    if (value === \"\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = \"\";\n      setForm({ ...form, volumes: newVolumes });\n      return;\n    }\n\n    if (name === \"peso\") {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = value;\n      setForm({ ...form, volumes: newVolumes });\n      return;\n    }\n\n    const parsedValue = parseInt(value.replace(/\\D/g, \"\"), 10);\n    if (!isNaN(parsedValue)) {\n      const newVolumes = [...form.volumes];\n      newVolumes[index][name] = parsedValue;\n      setForm({ ...form, volumes: newVolumes });\n    }\n  };\n\n  // ðŸ”¹ Formata o peso corretamente ao sair do campo\n  const formatPesoFinal = (index) => {\n    let pesoAtual = form.volumes[index].peso;\n\n    if (!pesoAtual || pesoAtual === \",\") {\n      pesoAtual = \"0,0\";\n    }\n\n    // Se nÃ£o houver vÃ­rgula, adiciona \",0\"\n    if (!pesoAtual.includes(\",\")) {\n      pesoAtual = `${pesoAtual},0`;\n    }\n\n    // Divide entre kg e gramas\n    let [kg, g] = pesoAtual.split(\",\");\n\n    // Remove zeros Ã  esquerda do kg (mas mantÃ©m pelo menos \"0\")\n    kg = kg.replace(/^0+/, \"\") || \"0\";\n\n    // Garante que os gramas tenham 1 dÃ­gito\n    g = (g || \"\").slice(0, 1).padEnd(1, \"0\");\n\n    // Atualiza o valor formatado\n    const newVolumes = [...form.volumes];\n    newVolumes[index].peso = `${kg},${g}`;\n    setForm({ ...form, volumes: newVolumes });\n  };\n\n  return (\n    <div className=\"cotacao-container\">\n      <h1>Calculadora de Frete</h1>\n\n      <div className=\"volumes-container\">\n        <h3>Dados do Volume</h3>\n        {form.volumes.map((volume, index) => (\n          <div key={index} className=\"volume-box\">\n            <label>Altura (cm)</label>\n            <input\n              type=\"number\"\n              name=\"altura\"\n              value={volume.altura}\n              onChange={(e) => handleVolumeChange(index, e)}\n            />\n\n            <label>Largura (cm)</label>\n            <input\n              type=\"number\"\n              name=\"largura\"\n              value={volume.largura}\n              onChange={(e) => handleVolumeChange(index, e)}\n            />\n\n            <label>Comprimento (cm)</label>\n            <input\n              type=\"number\"\n              name=\"comprimento\"\n              value={volume.comprimento}\n              onChange={(e) => handleVolumeChange(index, e)}\n            />\n\n            <label>Peso (Kg)</label>\n            <input\n              type=\"text\"\n              name=\"peso\"\n              value={volume.peso}\n              onChange={(e) => handleVolumeChange(index, e)}\n              onBlur={() => formatPesoFinal(index)} // Formata ao sair do campo\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Cotacao;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}