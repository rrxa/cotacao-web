{"ast":null,"code":"const API_URL = \"http://127.0.0.1:8000\";\nexport const calcularCotacao = async dados => {\n  try {\n    const response = await fetch(`${API_URL}/calcular/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify(dados)\n    });\n    if (!response.ok) {\n      throw new Error(\"Erro ao calcular cotação\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Erro na requisição:\", error);\n    return {\n      erro: \"Falha ao conectar com o servidor\"\n    };\n  }\n};","map":{"version":3,"names":["API_URL","calcularCotacao","dados","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","erro"],"sources":["C:/Users/4305038/cotacao-web/frontend/src/services/api.js"],"sourcesContent":["const API_URL = \"http://127.0.0.1:8000\";\n\nexport const calcularCotacao = async (dados) => {\n    try {\n        const response = await fetch(`${API_URL}/calcular/`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            body: JSON.stringify(dados),\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Erro ao calcular cotação\");\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(\"Erro na requisição:\", error);\n        return { erro: \"Falha ao conectar com o servidor\" };\n    }\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAK,IAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,YAAY,EAAE;MACjDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO;MAAEE,IAAI,EAAE;IAAmC,CAAC;EACvD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}